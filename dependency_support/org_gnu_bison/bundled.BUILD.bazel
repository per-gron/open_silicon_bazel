# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//visibility:private"])

licenses(["restricted"])

load("@com_google_open_silicon_bazel//dependency_support:copy.bzl", "copy", "touch")
load("@com_google_open_silicon_bazel//dependency_support/org_gnu_bison:bison.bzl", "genyacc")
load("@com_google_open_silicon_bazel//dependency_support:pseudo_configure.bzl", "pseudo_configure")

exports_files(["LICENSE"])

PKG_DATA_DIR = "./data"

LOCALE_DIR = "/dev/null"

cc_library(
    name = "libbison",
    srcs = [
        "lib/allocator.c",
        "lib/areadlink.c",
        "lib/argmatch.c",
        "lib/asnprintf.c",
        "lib/asprintf.c",
        "lib/basename.c",
        "lib/basename-lgpl.c",
        "lib/binary-io.c",
        "lib/bitrotate.c",
        "lib/bitset.c",
        "lib/bitset/array.c",
        "lib/bitset/list.c",
        "lib/bitset/stats.c",
        "lib/bitset/table.c",
        "lib/bitset/vector.c",
        "lib/bitsetv.c",
        "lib/c-ctype.c",
        "lib/c-strcasecmp.c",
        "lib/c-strncasecmp.c",
        "lib/cloexec.c",
        "lib/close-stream.c",
        "lib/closeout.c",
        "lib/concat-filename.c",
        "lib/dirname.c",
        "lib/dirname-lgpl.c",
        "lib/dup-safer.c",
        "lib/dup-safer-flag.c",
        "lib/exitfail.c",
        "lib/fatal-signal.c",
        "lib/fd-hook.c",
        "lib/fd-safer.c",
        "lib/fd-safer-flag.c",
        "lib/fopen-safer.c",
        "lib/fstrcmp.c",
        "lib/get-errno.c",
        "lib/gethrxtime.c",
        "lib/getprogname.c",
        "lib/gettime.c",
        "lib/gl_array_list.c",
        "lib/gl_list.c",
        "lib/gl_xlist.c",
        "lib/glthread/lock.c",
        "lib/glthread/threadlib.c",
        "lib/glthread/tls.c",
        "lib/hard-locale.c",
        "lib/hash.c",
        "lib/iswblank.c",
        "lib/localcharset.c",
        "lib/localtime-buffer.c",
        "lib/math.c",
        "lib/mbchar.c",
        "lib/mbfile.c",
        "lib/mbrtowc.c",
        "lib/mbswidth.c",
        "lib/path-join.c",
        "lib/pipe-safer.c",
        "lib/pipe2.c",
        "lib/pipe2-safer.c",
        "lib/printf-args.c",
        "lib/printf-frexpl.c",
        "lib/printf-parse.c",
        "lib/progname.c",
        "lib/progreloc.c",
        "lib/quotearg.c",
        "lib/readlink.c",
        "lib/relocatable.c",
        "lib/rename.c",
        "lib/rmdir.c",
        "lib/setenv.c",
        "lib/sig-handler.c",
        "lib/spawn-pipe.c",
        "lib/stripslash.c",
        "lib/timespec.c",
        "lib/timevar.c",
        "lib/unistd.c",
        "lib/vasnprintf.c",
        "lib/vasprintf.c",
        "lib/wait-process.c",
        "lib/wctype-h.c",
        "lib/xalloc-die.c",
        "lib/xconcat-filename.c",
        "lib/xhash.c",
        "lib/xmalloc.c",
        "lib/xmemdup0.c",
        "lib/xreadlink.c",
        "lib/xsize.c",
        "lib/xstrndup.c",
        "lib/xtime.c",
    ],
    copts = [
        "-w",
        "-DHAVE_CONFIG_H",
        # These are defined in gnulib's fcntl.h, but they're the only thing we
        # need from gnulib, so we define them here instead for simplicity.
        "-DO_BINARY=0",
        "-DO_TEXT=0",
    ],
    includes = [
        ".",
        "lib",
    ],
    textual_hdrs =
        glob(
            ["lib/**/*.h"],
        ) + [
            "lib/config.h",
            "lib/configmake.h",
            "lib/printf-frexp.c",
            "lib/timevar.def",
            "src/system.h",
            "lib/textstyle.h",
        ],
)

# In order to use bison properly in a shell command, set the env variable
# BISON_PKGDATADIR=[workspace dir]/bison/data in any shell command you invoke
# bison in.  If you use the genyacc rule, Bazel should do this for for you.
# You will also need to set M4 to the location of m4, which is
# generally $(location @org_gnu_m4//:m4) in a Bazel genrule.

filegroup(
    name = "bison_runtime_data",
    srcs = glob(["data/**/*"]),
    output_licenses = ["unencumbered"],
    path = "data",
    visibility = ["//visibility:public"],
)

exports_files([
    "data",
])

cc_library(
    name = "bison_src_headers",
    textual_hdrs = glob(["src/*.h"]) + [
        "src/scan-skel.c",
        "src/scan-gram.c",
        "src/scan-code.c",
    ],
)

# Note: This target is used by the Bazel "genyacc" rule, as well as by the
# explictly-declared dependencies.
cc_binary(
    name = "bison",
    srcs = [
        "src/AnnotationList.c",
        "src/InadequacyList.c",
        "src/Sbitset.c",
        "src/assoc.c",
        "src/closure.c",
        "src/complain.c",
        "src/conflicts.c",
        "src/derives.c",
        "src/files.c",
        "src/fixits.c",
        "src/getargs.c",
        "src/gram.c",
        "src/graphviz.c",
        "src/ielr.c",
        "src/lalr.c",
        "src/location.c",
        "src/lr0.c",
        "src/main.c",
        "src/muscle-tab.c",
        "src/named-ref.c",
        "src/nullable.c",
        "src/output.c",
        "src/parse-gram.c",
        "src/print.c",
        "src/print-graph.c",
        "src/print-xml.c",
        "src/reader.c",
        "src/reduce.c",
        "src/relation.c",
        "src/scan-code-c.c",
        "src/scan-gram-c.c",
        "src/scan-skel-c.c",
        "src/state.c",
        "src/symlist.c",
        "src/symtab.c",
        "src/tables.c",
        "src/uniqstr.c",
    ],
    copts = [
        "-Wno-vla",
        "-DHAVE_CONFIG_H",
        "-DPKGDATADIR='\"" + PKG_DATA_DIR + "\"'",
        "-DLOCALEDIR='\"" + LOCALE_DIR + "\"'",
        # This is defined in gnulib's stdio.h, but we don't need anything else
        # from that file.
        "-D_GL_ATTRIBUTE_FORMAT_PRINTF(A,B)=",
    ],
    data = [":bison_runtime_data"],
    output_licenses = ["unencumbered"],
    visibility = ["//visibility:public"],
    deps = [
        ":bison_src_headers",
        ":libbison",
    ],
)

copy(
    name = "textstyle_h",
    src = "lib/textstyle.in.h",
    out = "lib/textstyle.h",
)

pseudo_configure(
    name = "config_h",
    src = "lib/config.in.h",
    out = "lib/config.h",
    defs = ['CHECK_PRINTF_SAFE', 'C_LOCALE_MAYBE_EILSEQ', 'DBL_EXPBIT0_WORD', 'ENABLE_NLS', 'FUNC_REALPATH_WORKS', 'GNULIB_CANONICALIZE_LGPL', 'GNULIB_CLOSE_STREAM', 'GNULIB_DIRNAME', 'GNULIB_FD_SAFER_FLAG', 'GNULIB_FOPEN_SAFER', 'GNULIB_FSCANF', 'GNULIB_MALLOC_GNU', 'GNULIB_MSVC_NOTHROW', 'GNULIB_PIPE2_SAFER', 'GNULIB_SCANF', 'GNULIB_SNPRINTF', 'GNULIB_STRERROR', 'GNULIB_TEST_CALLOC_POSIX', 'GNULIB_TEST_CANONICALIZE_FILE_NAME', 'GNULIB_TEST_CLOEXEC', 'GNULIB_TEST_CLOSE', 'GNULIB_TEST_DUP2', 'GNULIB_TEST_ENVIRON', 'GNULIB_TEST_FCNTL', 'GNULIB_TEST_FOPEN', 'GNULIB_TEST_FPRINTF_POSIX', 'GNULIB_TEST_FSYNC', 'GNULIB_TEST_GETDTABLESIZE', 'GNULIB_TEST_GETRUSAGE', 'GNULIB_TEST_GETTIMEOFDAY', 'GNULIB_TEST_ISNAN', 'GNULIB_TEST_ISNAND', 'GNULIB_TEST_ISNANF', 'GNULIB_TEST_ISNANL', 'GNULIB_TEST_ISWBLANK', 'GNULIB_TEST_LDEXPL', 'GNULIB_TEST_MALLOC_POSIX', 'GNULIB_TEST_MBRTOWC', 'GNULIB_TEST_MBSINIT', 'GNULIB_TEST_MEMCHR', 'GNULIB_TEST_OBSTACK_PRINTF', 'GNULIB_TEST_OPEN', 'GNULIB_TEST_PERROR', 'GNULIB_TEST_PIPE2', 'GNULIB_TEST_POSIX_SPAWNATTR_DESTROY', 'GNULIB_TEST_POSIX_SPAWNATTR_INIT', 'GNULIB_TEST_POSIX_SPAWNATTR_SETFLAGS', 'GNULIB_TEST_POSIX_SPAWNATTR_SETSIGMASK', 'GNULIB_TEST_POSIX_SPAWNP', 'GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE', 'GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2', 'GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN', 'GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_DESTROY', 'GNULIB_TEST_POSIX_SPAWN_FILE_ACTIONS_INIT', 'GNULIB_TEST_PRINTF_POSIX', 'GNULIB_TEST_RAISE', 'GNULIB_TEST_READLINK', 'GNULIB_TEST_REALLOC_POSIX', 'GNULIB_TEST_REALPATH', 'GNULIB_TEST_RENAME', 'GNULIB_TEST_SIGACTION', 'GNULIB_TEST_SIGPROCMASK', 'GNULIB_TEST_SNPRINTF', 'GNULIB_TEST_SPRINTF_POSIX', 'GNULIB_TEST_STPCPY', 'GNULIB_TEST_STRDUP', 'GNULIB_TEST_STRERROR', 'GNULIB_TEST_STRNDUP', 'GNULIB_TEST_STRVERSCMP', 'GNULIB_TEST_UNLINK', 'GNULIB_TEST_UNSETENV', 'GNULIB_TEST_VASPRINTF', 'GNULIB_TEST_VSNPRINTF', 'GNULIB_TEST_VSPRINTF_POSIX', 'GNULIB_TEST_WAITPID', 'GNULIB_TEST_WCWIDTH', 'GWINSZ_IN_SYS_IOCTL', 'HAVE_ALLOCA', 'HAVE_ALLOCA_H', 'HAVE_CALLOC_POSIX', 'HAVE_CANONICALIZE_FILE_NAME', 'HAVE_CATGETS', 'HAVE_CLOCK_GETTIME', 'HAVE_CLOCK_SETTIME', 'HAVE_DCGETTEXT', 'HAVE_DECL_ALARM', 'HAVE_DECL_CLEARERR_UNLOCKED', 'HAVE_DECL_FEOF_UNLOCKED', 'HAVE_DECL_FERROR_UNLOCKED', 'HAVE_DECL_FFLUSH_UNLOCKED', 'HAVE_DECL_FGETS_UNLOCKED', 'HAVE_DECL_FPUTC_UNLOCKED', 'HAVE_DECL_FPUTS_UNLOCKED', 'HAVE_DECL_FREAD_UNLOCKED', 'HAVE_DECL_FWRITE_UNLOCKED', 'HAVE_DECL_GETCHAR_UNLOCKED', 'HAVE_DECL_GETC_UNLOCKED', 'HAVE_DECL_GETDTABLESIZE', 'HAVE_DECL_ISWBLANK', 'HAVE_DECL_OBSTACK_PRINTF', 'HAVE_DECL_PROGRAM_INVOCATION_NAME', 'HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME', 'HAVE_DECL_PUTCHAR_UNLOCKED', 'HAVE_DECL_PUTC_UNLOCKED', 'HAVE_DECL_SETENV', 'HAVE_DECL_SNPRINTF', 'HAVE_DECL_STRDUP', 'HAVE_DECL_STRERROR_R', 'HAVE_DECL_STRNDUP', 'HAVE_DECL_STRNLEN', 'HAVE_DECL_UNSETENV', 'HAVE_DECL_VSNPRINTF', 'HAVE_DECL_WCWIDTH', 'HAVE_DECL___FPENDING', 'HAVE_DUP2', 'HAVE_ENVIRON_DECL', 'HAVE_FCNTL', 'HAVE_FEATURES_H', 'HAVE_FREXP_IN_LIBC', 'HAVE_FSYNC', 'HAVE_GETCWD', 'HAVE_GETDTABLESIZE', 'HAVE_GETOPT_H', 'HAVE_GETOPT_LONG_ONLY', 'HAVE_GETRUSAGE', 'HAVE_GETTEXT', 'HAVE_GETTIMEOFDAY', 'HAVE_INTMAX_T', 'HAVE_INTTYPES_H', 'HAVE_INTTYPES_H_WITH_UINTMAX', 'HAVE_ISASCII', 'HAVE_ISNAND_IN_LIBC', 'HAVE_ISNANF_IN_LIBC', 'HAVE_ISWBLANK', 'HAVE_ISWCNTRL', 'HAVE_LANGINFO_CODESET', 'HAVE_LDEXPL', 'HAVE_LIMITS_H', 'HAVE_LINK', 'HAVE_LOCALE_H', 'HAVE_LONG_LONG_INT', 'HAVE_LSTAT', 'HAVE_MALLOC_GNU', 'HAVE_MALLOC_POSIX', 'HAVE_MAP_ANONYMOUS', 'HAVE_MATH_H', 'HAVE_MBRTOWC', 'HAVE_MBSINIT', 'HAVE_MBSTATE_T', 'HAVE_MEMORY_H', 'HAVE_MINMAX_IN_SYS_PARAM_H', 'HAVE_MPROTECT', 'HAVE_OBSTACK_PRINTF', 'HAVE_PIPE', 'HAVE_PIPE2', 'HAVE_POSIX_SPAWN', 'HAVE_POSIX_SPAWNATTR_T', 'HAVE_POSIX_SPAWN_FILE_ACTIONS_T', 'HAVE_RAISE', 'HAVE_READLINK', 'HAVE_READLINKAT', 'HAVE_REALLOC_POSIX', 'HAVE_REALPATH', 'HAVE_SEARCH_H', 'HAVE_SETENV', 'HAVE_SETLOCALE', 'HAVE_SIGACTION', 'HAVE_SIGALTSTACK', 'HAVE_SIGINTERRUPT', 'HAVE_SIGSET_T', 'HAVE_SIG_ATOMIC_T', 'HAVE_SNPRINTF', 'HAVE_SNPRINTF_RETVAL_C99', 'HAVE_SPAWN_H', 'HAVE_STDINT_H', 'HAVE_STDINT_H_WITH_UINTMAX', 'HAVE_STDIO_EXT_H', 'HAVE_STDLIB_H', 'HAVE_STPCPY', 'HAVE_STRDUP', 'HAVE_STRERROR_R', 'HAVE_STRINGS_H', 'HAVE_STRING_H', 'HAVE_STRNDUP', 'HAVE_STRNLEN', 'HAVE_STRUCT_SIGACTION_SA_SIGACTION', 'HAVE_STRUCT_TMS', 'HAVE_STRVERSCMP', 'HAVE_SYMLINK', 'HAVE_SYS_CDEFS_H', 'HAVE_SYS_MMAN_H', 'HAVE_SYS_PARAM_H', 'HAVE_SYS_RESOURCE_H', 'HAVE_SYS_SOCKET_H', 'HAVE_SYS_STAT_H', 'HAVE_SYS_TIMES_H', 'HAVE_SYS_TIME_H', 'HAVE_SYS_TYPES_H', 'HAVE_SYS_WAIT_H', 'HAVE_TCDRAIN', 'HAVE_TOWLOWER', 'HAVE_TSEARCH', 'HAVE_UNISTD_H', 'HAVE_UNSETENV', 'HAVE_UNSIGNED_LONG_LONG_INT', 'HAVE_VASPRINTF', 'HAVE_VSNPRINTF', 'HAVE_WAITID', 'HAVE_WCHAR_H', 'HAVE_WCHAR_T', 'HAVE_WCRTOMB', 'HAVE_WCSLEN', 'HAVE_WCSNLEN', 'HAVE_WCTYPE_H', 'HAVE_WCWIDTH', 'HAVE_WINT_T', 'HAVE_WORKING_O_NOATIME', 'HAVE_WORKING_O_NOFOLLOW', 'HAVE__BOOL', 'HAVE___XPG_STRERROR_R', 'LSTAT_FOLLOWS_SLASHED_SYMLINK', 'MALLOC_0_IS_NONNULL', '__USE_MINGW_ANSI_STDIO', 'STDC_HEADERS', 'STRERROR_R_CHAR_P', 'USE_POSIX_THREADS', 'USE_POSIX_THREADS_WEAK', '_ALL_SOURCE', '_DARWIN_C_SOURCE', '_GNU_SOURCE', '_NETBSD_SOURCE', '_OPENBSD_SOURCE', '_POSIX_PTHREAD_SEMANTICS', '__STDC_WANT_IEC_60559_ATTRIBS_EXT__', '__STDC_WANT_IEC_60559_BFP_EXT__', '__STDC_WANT_IEC_60559_DFP_EXT__', '__STDC_WANT_IEC_60559_FUNCS_EXT__', '__STDC_WANT_IEC_60559_TYPES_EXT__', '__STDC_WANT_LIB_EXT2__', '__STDC_WANT_MATH_SPEC_FUNCS__', '_TANDEM_SOURCE', '_HPUX_ALT_XOPEN_SOCKET_API', '__EXTENSIONS__', 'USE_UNLOCKED_IO', 'WORDS_BIGENDIAN', '_DARWIN_USE_64_BIT_INODE', '_NETBSD_SOURCE', '_USE_STD_STAT', '__GNUC_STDC_INLINE__'],
    mappings = {'DBL_EXPBIT0_BIT': '20', 'FLT_EXPBIT0_BIT': '23', 'FLT_EXPBIT0_WORD': '0', 'GETTIMEOFDAY_TIMEZONE': 'struct timezone', 'HAVE_DECL_GETHRTIME': '0', 'HAVE_DECL_MBSWIDTH_IN_WCHAR_H': '0', 'HAVE_DECL__SNPRINTF': '0', 'HAVE_DECL___ARGV': '0', 'INSTALLPREFIX': r'"\/usr\/local"', 'M4': r'"\/usr\/bin\/m4"', 'M4_GNU_OPTION': '""', 'PACKAGE': '"bison"', 'PACKAGE_BUGREPORT': '"bug-bison@gnu.org"', 'PACKAGE_COPYRIGHT_YEAR': '2019', 'PACKAGE_NAME': '"GNU Bison"', 'PACKAGE_STRING': '"GNU Bison 3.5"', 'PACKAGE_TARNAME': '"bison"', 'PACKAGE_URL': r'"http:\/\/www.gnu.org\/software\/bison\/"', 'PACKAGE_VERSION': '"3.5"', 'PROMOTED_MODE_T': 'mode_t', 'BOURNE_SHELL': r'"\/bin\/sh"', 'USER_LABEL_PREFIX': '', 'VERSION': '"3.5"', '_Noreturn': '', '_GL_ASYNC_SAFE': '', '_GL_EXTERN_INLINE_STDHEADER_BUG': '', '_GL_INLINE': 'static _GL_UNUSED', '_GL_EXTERN_INLINE': 'static _GL_UNUSED', '_GL_EXTERN_INLINE_IN_USE': '', '_GL_INLINE_HEADER_CONST_PRAGMA': '', '_GL_INLINE_HEADER_BEGIN': '', '_GL_INLINE_HEADER_END': '', 'restrict': '__restrict', '_Restrict': '', '__restrict__': '', '_GL_UNUSED': '', '_UNUSED_PARAMETER_': '_GL_UNUSED', '_GL_UNUSED_LABEL': '', '_GL_ATTRIBUTE_PURE': '', '_GL_ATTRIBUTE_CONST': '', '_GL_ATTRIBUTE_MALLOC': ''},
)

touch(
    name = "configmake_h",
    out = "lib/configmake.h",
    contents = dict(
        LIBDIR = '"/usr/local/lib"',
    ),
)

# Compile one of the examples and use that as a basic smoke test.
genyacc(
    name = "calc_y",
    src = "examples/c/calc/calc.y",
    header_out = "calc.h",
    source_out = "calc.cc",
)

cc_binary(
    name = "calc",
    srcs = ["calc.cc", "calc.h"],
)

sh_test(
    name = "calc_test",
    srcs = ["@com_google_open_silicon_bazel//dependency_support/org_gnu_bison:calc_test.sh"],
    args = ["$(location :calc)"],
    data = [
        ":calc",
    ],

)
