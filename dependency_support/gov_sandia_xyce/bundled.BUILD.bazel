# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

licenses(["restricted"])

load("@com_google_open_silicon_bazel//dependency_support:cmake_substitution.bzl", "cmake_substitution")
load("@com_google_open_silicon_bazel//dependency_support:copy.bzl", "copy")


COPTS = [
    "-w",
]

copy(
    name = "xyce_config_h",
    src = "@com_google_open_silicon_bazel//dependency_support/gov_sandia_xyce:Xyce_config.h",
    out = "generated_config/Xyce_config.h",
)

cmake_substitution(
    name = "timestamp_h",
    src = "src/UtilityPKG/timestamp.h.cmake",
    out = "src/UtilityPKG/timestamp.h",
    substitutions = {
        "VERSION": "",
        "XYCEBUILDTIMESTAMP": "",
    },
    automake_substitutions = {
        "VERSION": "BAZEL",
        "XYCEBUILDTIMESTAMP": "REDACTED",
    },
)

cc_library(
    name = "config",
    hdrs = ["generated_config/Xyce_config.h"],
    includes = ["generated_config"],
)

cc_library(
    name = "libxyce",
    srcs = glob([
        "src/AnalysisPKG/*.C",
        "src/CircuitPKG/*.C",
        "src/DakotaLinkPKG/*.C",
        "src/DeviceModelPKG/**/*.C",
        "src/ErrorHandlingPKG/*.C",
        "src/IOInterfacePKG/**/*.C",
        "src/LinearAlgebraServicesPKG/**/*.C",
        "src/LinearAlgebraServicesPKG/**/*.c",
        "src/LoaderServicesPKG/*.C",
        "src/MultiTimePDEPKG/*.C",
        "src/NonlinearSolverPKG/*.C",
        "src/ParallelDistPKG/*.C",
        "src/TimeIntegrationPKG/*.C",
        "src/TopoManagerPKG/*.C",
        "src/UtilityPKG/*.C",
    ], exclude = [
        "src/DeviceModelPKG/test/*.C",
        "src/DeviceModelPKG/OpenModels/N_DEV_PlaceHolder.C",
        "src/IOInterfacePKG/N_IO_DistToolHierarchical.C",
        "src/LinearAlgebraServicesPKG/test/*.C",
        "src/LinearAlgebraServicesPKG/N_LAS_Amesos2Solver.C",
        "src/LinearAlgebraServicesPKG/N_LAS_PrecondFactory.C",
        "src/LinearAlgebraServicesPKG/N_LAS_ShyLUSolver.C",
        "src/NonlinearSolverPKG/N_NLS_LOCA_StepSizeControl.C",
        "src/UtilityPKG/N_UTL_IntelFFT_Interface.C",
        "src/UtilityPKG/N_UTL_MPI.C",
    ]),
    hdrs = glob([
        "src/**/*.h",
        "src/**/*.hpp",
    ]) + [
        "src/UtilityPKG/timestamp.h",
    ],
    includes = [
        "src/AnalysisPKG",
        "src/CircuitPKG",
        "src/DakotaLinkPKG",
        "src/DeviceModelPKG/ADMS",
        "src/DeviceModelPKG/Core",
        "src/DeviceModelPKG/EXTSC",
        "src/DeviceModelPKG/IBISModels",
        "src/DeviceModelPKG/NeuronModels",
        "src/DeviceModelPKG/OpenModels",
        "src/DeviceModelPKG/TCADModels",
        "src/ErrorHandlingPKG",
        "src/IOInterfacePKG",
        "src/IOInterfacePKG/Output",
        "src/LinearAlgebraServicesPKG",
        "src/LinearAlgebraServicesPKG/ksparse",
        "src/LoaderServicesPKG",
        "src/MultiTimePDEPKG",
        "src/NonlinearSolverPKG",
        "src/ParallelDistPKG",
        "src/TimeIntegrationPKG",
        "src/TopoManagerPKG",
        "src/UtilityPKG",
    ],
    deps = [
        ":config",
        "@org_fftw//:fftw",
        "@org_trilinos//:amesos",
        "@org_trilinos//:aztecoo",
        "@org_trilinos//:belos",
        "@org_trilinos//:epetra",
        "@org_trilinos//:epetraext",
        "@org_trilinos//:ifpack",
        "@org_trilinos//:nox",
        "@org_trilinos//:sacado",
        "@org_trilinos//:teuchos",
    ],
    copts = COPTS,
)

cc_binary(
    name = "xyce",
    srcs = ["src/Xyce.C"],
    deps = [
        ":libxyce",
    ],
    copts = COPTS,
    visibility = ["//visibility:public"],
)
